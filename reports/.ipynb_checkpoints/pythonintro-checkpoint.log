Traceback (most recent call last):
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\nbclient\client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "c:\program files\python38\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\nbclient\client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\nbclient\client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\Users\stanb\AppData\Roaming\Python\Python38\site-packages\nbclient\client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# a string variable
name = "Stan Baek"

# You can check the type in use by issuing the type() command
type(name)

# It will return <class 'str'>

# Add a new string variable 
title = "the legendary pirate captain"

# You can add (+) string variables to combine them into a new variable
character = name + ": " + title

# print
print(character)

# integer variable
age = 726

# Check the type using type()
type(name)

# Let's try to combine a string with an integer
print(character + age)

# Now let's convert integer to string for printing
print(character + " is " + str(age) + " years old.")

# You can ask for input from the user. 
age = input("How old are you? ")

type(age)

# Since age is a string variable. We need to convert it to integer.
int(age)+10

# Numbers with a decimal point are floating point variables
x = 3.141
type(x)

print(x)

print(int(x))
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mTypeError[0m                                 Traceback (most recent call last)
Input [1;32mIn [6][0m, in [0;36m<module>[1;34m[0m
[0;32m     22[0m [38;5;28mtype[39m(name)
[0;32m     24[0m [38;5;66;03m# Let's try to combine a string with an integer[39;00m
[1;32m---> 25[0m [38;5;28mprint[39m([43mcharacter[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43mage[49m)
[0;32m     27[0m [38;5;66;03m# Now let's convert integer to string for printing[39;00m
[0;32m     28[0m [38;5;28mprint[39m(character [38;5;241m+[39m [38;5;124m"[39m[38;5;124m is [39m[38;5;124m"[39m [38;5;241m+[39m [38;5;28mstr[39m(age) [38;5;241m+[39m [38;5;124m"[39m[38;5;124m years old.[39m[38;5;124m"[39m)

[1;31mTypeError[0m: can only concatenate str (not "int") to str
TypeError: can only concatenate str (not "int") to str

